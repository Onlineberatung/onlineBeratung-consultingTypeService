<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <description>Caritas Online Beratung: ConsultingTypeService</description>

  <groupId>de.caritas.cob</groupId>
  <artifactId>consultingtypeservice</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>ConsultingTypeService</name>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.3.5.RELEASE</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>11</java.version>
    <!-- force at least version 2.16 due to https://logging.apache.org/log4j/2.x/security.html -->
    <log4j.version>2.16.0</log4j.version>
  </properties>

  <dependencies>
    <!-- Spring Boot dependencies -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-hateoas</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-cache</artifactId>
    </dependency>
    <dependency>
      <groupId>net.sf.ehcache</groupId>
      <artifactId>ehcache</artifactId>
      <version>2.10.6</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate.validator</groupId>
      <artifactId>hibernate-validator</artifactId>
      <version>6.1.6.Final</version>
    </dependency>

    <!-- OpenApi/Swagger dependencies -->
    <dependency>
      <groupId>org.openapitools</groupId>
      <artifactId>openapi-generator-maven-plugin</artifactId>
      <version>5.1.1</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.openapitools</groupId>
      <artifactId>jackson-databind-nullable</artifactId>
      <version>0.2.1</version>
    </dependency>
    <!-- SpringFox: generate YAML file from POJOs and generate documentation -->
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger2</artifactId>
      <version>2.9.2</version>
    </dependency>
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-bean-validators</artifactId>
      <version>2.9.2</version>
    </dependency>
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger-ui</artifactId>
      <version>2.9.2</version>
    </dependency>

    <!-- Lombok dependencies -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>

    <!-- Apache Commons Lang -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.11</version>
    </dependency>

    <!-- Test scope dependencies -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>com.vaadin.external.google</groupId>
          <artifactId>android-json</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <artifactId>powermock-module-junit4</artifactId>
      <groupId>org.powermock</groupId>
      <scope>test</scope>
      <version>2.0.2</version>
    </dependency>
    <dependency>
      <artifactId>powermock-api-mockito2</artifactId>
      <groupId>org.powermock</groupId>
      <scope>test</scope>
      <version>2.0.2</version>
    </dependency>

    <!-- EasyRandom -->
    <dependency>
      <groupId>org.jeasy</groupId>
      <artifactId>easy-random-core</artifactId>
      <version>4.3.0</version>
      <scope>test</scope>
    </dependency>

    <!-- Json schema validator -->
    <dependency>
      <groupId>com.github.everit-org.json-schema</groupId>
      <artifactId>org.everit.json.schema</artifactId>
      <version>1.12.2</version>
    </dependency>
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>20201115</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/net.javacrumbs.json-unit/json-unit -->
    <dependency>
      <groupId>net.javacrumbs.json-unit</groupId>
      <artifactId>json-unit</artifactId>
      <version>2.25.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.javacrumbs.json-unit</groupId>
      <artifactId>json-unit-spring</artifactId>
      <version>2.25.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>javax.ws.rs</groupId>
      <artifactId>javax.ws.rs-api</artifactId>
      <version>2.1.1</version>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-to-slf4j</artifactId>
      <version>${log4j.version}</version>
    </dependency>

  </dependencies>

  <repositories>
    <repository>
      <id>1_maven.apache.org</id>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <url>https://repo.maven.apache.org/maven2</url>
      <layout>default</layout>
    </repository>
    <repository>
      <id>jitpack.io</id>
      <url>https://jitpack.io</url>
    </repository>
  </repositories>

  <build>
    <finalName>${project.name}</finalName>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>

      <!-- json-schema.org pojo generation -->
      <plugin>
        <groupId>org.jsonschema2pojo</groupId>
        <artifactId>jsonschema2pojo-maven-plugin</artifactId>
        <version>0.4.34</version>
        <configuration>
          <sourceDirectory>${basedir}/src/main/resources/schemas</sourceDirectory>
          <outputDirectory>target/generated-sources</outputDirectory>
          <targetPackage>de.caritas.cob.consultingtypeservice.schemas.model</targetPackage>
          <useCommonsLang3>true</useCommonsLang3>
          <generateBuilders>true</generateBuilders>
          <includeAdditionalProperties>true</includeAdditionalProperties>
          <includeConstructors>true</includeConstructors>
          <initializeCollections>true</initializeCollections>
          <removeOldOutput>true</removeOldOutput>
          <annotationStyle>jackson2</annotationStyle>
          <includeAdditionalProperties>false</includeAdditionalProperties>
          <initializeCollections>true</initializeCollections>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- OpenApi codegen maven plugin: generates api stubs -->
      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <version>5.1.1</version>
        <executions>
          <execution>
            <id>consulting-type-service</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <configOptions>
                <interfaceOnly>true</interfaceOnly>
                <sourceFolder>/</sourceFolder>
              </configOptions>
              <inputSpec>${project.basedir}/api/consultingtypeservice.yml</inputSpec>
              <generatorName>spring</generatorName>
              <apiPackage>${project.groupId}.${project.artifactId}.generated.api.controller
              </apiPackage>
              <modelPackage>${project.groupId}.${project.artifactId}.api.model</modelPackage>
              <generateSupportingFiles>true</generateSupportingFiles>
              <output>target/generated-sources</output>
              <typeMappings>
                <typeMapping>
                  RoleConsultantDTO=${project.groupId}.${project.artifactId}.api.consultingtypes.roles.Consultant
                </typeMapping>
              </typeMappings>
            </configuration>
          </execution>
          <execution>
            <id>consulting-type-admin-service</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <configOptions>
                <interfaceOnly>true</interfaceOnly>
                <sourceFolder>/</sourceFolder>
              </configOptions>
              <inputSpec>${project.basedir}/api/consultingtypeadminservice.yml</inputSpec>
              <generatorName>spring</generatorName>
              <apiPackage>${project.groupId}.${project.artifactId}.generated.api.admin.controller
              </apiPackage>
              <modelPackage>${project.groupId}.${project.artifactId}.api.model</modelPackage>
              <generateSupportingFiles>true</generateSupportingFiles>
              <output>target/generated-sources</output>
              <typeMappings>
                <typeMapping>
                  RoleConsultantDTO=${project.groupId}.${project.artifactId}.api.consultingtypes.roles.Consultant
                </typeMapping>
              </typeMappings>
            </configuration>
          </execution>
          <!-- Generate admin API markdown files -->
          <execution>
            <id>consulting-type-admin-service-markdown</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <configOptions>
              </configOptions>
              <inputSpec>${project.basedir}/api/consultingtypeadminservice.yml</inputSpec>
              <generatorName>markdown</generatorName>
              <output>target/generated-sources/markdown/adminapi</output>
              <apiPackage>./</apiPackage>
              <modelPackage>model</modelPackage>
              <generateApiTests>false</generateApiTests>
              <generateModelTests>false</generateModelTests>
              <generateSupportingFiles>false</generateSupportingFiles>
            </configuration>
          </execution>
          <execution>
            <id>tenant-service-client-model</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <configOptions>
                <sourceFolder>/</sourceFolder>
                <library>resttemplate</library>
                <dateLibrary>java8</dateLibrary>
              </configOptions>
              <inputSpec>${project.basedir}/services/tenantservice.yaml</inputSpec>
              <generatorName>java</generatorName>
              <generateApis>true</generateApis>
              <generateApiTests>false</generateApiTests>
              <generateModelTests>false</generateModelTests>
              <apiPackage>
                ${project.groupId}.${project.artifactId}.tenantservice.generated.web
              </apiPackage>
              <modelPackage>
                ${project.groupId}.${project.artifactId}.tenantservice.generated.web.model
              </modelPackage>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Code style check -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.1.1</version>
        <executions>
          <execution>
            <id>validate</id>
            <phase>validate</phase>
            <configuration>
              <configLocation>google_checks_light.xml</configLocation>
              <encoding>UTF-8</encoding>
              <failsOnError>true</failsOnError>
              <consoleOutput>true</consoleOutput>
              <failOnViolation>true</failOnViolation>
              <logViolationsToConsole>true</logViolationsToConsole>
              <violationSeverity>warning</violationSeverity>
              <includeTestSourceDirectory>true</includeTestSourceDirectory>
            </configuration>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin
        </artifactId> <!-- surefire plugin version managed by Spring Boot -->
        <configuration>
          <skipTests>true</skipTests>
        </configuration>
        <executions>
          <execution>
            <id>unit-tests</id>
            <phase>test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <skipTests>false</skipTests>
              <includes>
                <include>**/*Test.java</include>
              </includes>
            </configuration>
          </execution>
          <execution>
            <id>integration-tests</id>
            <phase>integration-test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <skipTests>false</skipTests>
              <includes>
                <include>**/*IT.*</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>local</id>
      <properties>
        <activeSpringProfile>local</activeSpringProfile>
      </properties>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
    </profile>
    <profile>
      <id>dev</id>
      <properties>
        <activeSpringProfile>dev</activeSpringProfile>
      </properties>
    </profile>
    <profile>
      <id>prod</id>
      <properties>
        <activeSpringProfile>prod</activeSpringProfile>
      </properties>
    </profile>
  </profiles>

</project>
